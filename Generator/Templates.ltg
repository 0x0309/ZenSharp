space ::= " "

// Resharper macros
cursor ::= "$END$"
manualType ::= "$type$"

// Fields
field ::= <accessField> ""=f <space> <type> "$name$" ";"

// Methods
method       ::= <accessMethod> <methodDecl> <space> <manualType> <space> "$name$" "(" <cursor> "){}"
methodDecl   ::= <space> static=M | ""=m
accessMethod ::= "public" | private=_ | protected=pr

// Auto properties
property        ::= <accessProperty> <space> <manualType> <space> "$name{get; " <lazyPrivateSpec> "set;}"
accessProperty  ::= "public"=p | private=_p | protected=P
lazyPrivateSpec ::= "private "=_ | ""

// Plain types
arraySpec  ::= "[]"=s | ""
type       ::= <primType> | <compType>
primType   ::= string=s | byte=b | double=d | <manualType>

// Complex types
genericArg  ::= "<" <primType> ">"
scgTypes    ::= IList=l | IEnumerable=e
generic2Arg ::= "<" <primType> ">"
scg2Types   ::= SortedList=sl | IDictionary=di
SCG         ::= "System.Collections.Generic"
compType    ::= <SCG> "." <scgTypes> <genericArg> | <SCG> "." <scg2Types> <generic2Arg>

scope "InCSharpTypeMember" {
  start    ::= <field> | <method> | <property>
}

scope "InCSharpTypeAndNamespace" {

}
