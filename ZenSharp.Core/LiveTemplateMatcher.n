using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Github.Ulex.ZenSharp.Core
{
  class LiveTemplateMatcher
  {
    private _tree : GenerateTree;

    public this(tree : GenerateTree) {
      _tree = tree;
    }

    FindRule (prefix : string, scopename : string) : LiveTemplate
    {
      def scope = _tree.FindScope(scopename);
      def applyRule(rule : object, str) {
        match (rule){
          | cr is ConcatRule => {
            mutable result = [];
            foreach (rule in cr.Rules){
              def appres = applyRule(rule);
              when (appres == null) 
              result = result + appres;
            }
            result;
          };
          | x is LeafRule => [(x, x.Match(str))];
        }
      }

      LiveTemplate(scopename, applyRule(_tree, prefix));
    }
  }
}
