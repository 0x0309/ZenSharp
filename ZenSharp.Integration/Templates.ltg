// C# templates
// Sample file
space ::= " "
cursor ::= "$END$"

// Resharper macros
identifier ::= <name default="$name$" macros = "complete()">
identifier2 ::= <name2 default="$name2$" macros = "complete()">

suggType ::= <type short="t" expand="$type$" macros = "complete()">

// Primive types
maybeType  ::= type | "void"
type       ::= compType | primType ("[]"=a | "") | suggType
primType   ::= string=s | byte=by | bool=b | double=d | int=i | "System.Guid"=g

// Complex types
genericArg  ::= "<" type ">"
scgTypes    ::= IList=l | IEnumerable="~"
generic2Arg ::= "<" type ", " type ">"
scg2Types   ::= SortedList=sl | IDictionary=di
SCG         ::= "System.Collections.Generic"
compType    ::= SCG "." (scgTypes genericArg | scg2Types generic2Arg)

methodArgs ::= "()"

access ::= (internal=i | public=p | private=_ | protected=P) space
// Auto properties
property        ::= access ("abstract "=pa | "static "=P | ""=p) type space identifier propertyBody cursor
propertyBody    ::= "{ get;" lazyPrivateSpec " set; }"
lazyPrivateSpec ::= ""="+" | "private "

method ::= access ("abstract "=am | "static "=M | ""=m) (type | "void") space identifier methodArgs methodBody
methodBoy ::= " { " cursor " }"

scope "InCSharpClass" {
  start    ::=  method | property | field | other
  field ::= access type space identifier ("="="=" identifier2 ";" | ";")

  other ::=
    | ""=test "[NUnit.Framework.TestAttribute] public void Test" identifier "(){" cursor "}"
}

scope "InCSharpTypeAndNamespace" {
  start ::=
    | class
    | interface

  // todo: '?' specifier
  class ::= access ("sealed "=s | "") ("class"=c | "static class"=C) space  classBody
  interface ::= access "interface"=i space classBody
  classBody ::= identifier "{" cursor "}"
}

scope "InCSharpInterface" {
  start ::=
    | type space identifier propertyBody cursor
    | method
    | property

  propertyBody ::= "{ get; }"
  access ::= ""
  methodBody ::= ";"
}

scope "InCSharpStatement" {
}

// Extensions:
// | "[NUnit.Framework.TestFixture] internal class "=testf identifier "{ " ( nunittest | cursor) " }"
// identifier ::= <name default="$name$" macros = "complete()">
