//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414, 0114
// ReSharper disable RedundantNameQualifier
using System.Collections;
using JetBrains.ReSharper.Psi.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
using JetBrains.ReSharper.Psi.RegExp.ClrRegex.Impl.Tree;
namespace JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree
{
  public static partial class ClrRegexSetRangeNavigator
  {
    [JetBrains.Annotations.Pure]
    [JetBrains.Annotations.CanBeNull]
    [JetBrains.Annotations.ContractAnnotation("null <= null")]
    public static JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRange GetByMax(JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRangeItem param)
    {
      if (param == null) return null;
      TreeElement current = (TreeElement) param;
      if (current.parent is JetBrains.ReSharper.Psi.RegExp.ClrRegex.Impl.Tree.ClrRegexSetRange &&
        current.parent.GetChildRole(current) == JetBrains.ReSharper.Psi.RegExp.ClrRegex.Impl.Tree.ClrRegexSetRange.REGEXP_RANGE_MAX)
      {
        current = current.parent;
      }
      else
      {
        return null;
      }
      return (JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRange) current;
    }
    [JetBrains.Annotations.Pure]
    [JetBrains.Annotations.CanBeNull]
    [JetBrains.Annotations.ContractAnnotation("null <= null")]
    public static JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRange GetByMin(JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRangeItem param)
    {
      if (param == null) return null;
      TreeElement current = (TreeElement) param;
      if (current.parent is JetBrains.ReSharper.Psi.RegExp.ClrRegex.Impl.Tree.ClrRegexSetRange &&
        current.parent.GetChildRole(current) == JetBrains.ReSharper.Psi.RegExp.ClrRegex.Impl.Tree.ClrRegexSetRange.REGEXP_RANGE_MIN)
      {
        current = current.parent;
      }
      else
      {
        return null;
      }
      return (JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRange) current;
    }
  }
}
