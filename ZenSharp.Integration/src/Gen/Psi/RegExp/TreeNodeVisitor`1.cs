//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414, 0114
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree
{
  public abstract partial class TreeNodeVisitor<TContext>
  {
    public virtual void VisitNode([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.Tree.ITreeNode node, TContext context)
    {
    }
    public virtual void VisitClrConcatenationRegularExpression([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrConcatenationRegularExpression clrConcatenationRegularExpressionParam, TContext context)
    {
      VisitNode(clrConcatenationRegularExpressionParam, context);
    }
    public virtual void VisitClrQuantifiableRegularExpression([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrQuantifiableRegularExpression clrQuantifiableRegularExpressionParam, TContext context)
    {
      VisitNode(clrQuantifiableRegularExpressionParam, context);
    }
    public virtual void VisitClrRegexAlternationGroup([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexAlternationGroup clrRegexAlternationGroupParam, TContext context)
    {
      VisitClrRegexGroup(clrRegexAlternationGroupParam, context);
    }
    public virtual void VisitClrRegexAnchor([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexAnchor clrRegexAnchorParam, TContext context)
    {
      VisitClrRegexQuantifierOwner(clrRegexAnchorParam, context);
    }
    public virtual void VisitClrRegexBorderAnchor([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexBorderAnchor clrRegexBorderAnchorParam, TContext context)
    {
      VisitClrRegexAnchor(clrRegexBorderAnchorParam, context);
    }
    public virtual void VisitClrRegexBracketCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexBracketCharacter clrRegexBracketCharacterParam, TContext context)
    {
      VisitClrRegexCharacter(clrRegexBracketCharacterParam, context);
    }
    [System.Obsolete("There are Nodes in PSI [clrRegexEscapeCharacter, clrRegexInvalidCharacter, clrRegexRegularCharacter, clrRegexSymbolCharacter] that directly implements clrRegexCharacter and other interfaces, so this visitor member will not be invoked for these nodes")]
    public virtual void VisitClrRegexCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexCharacter clrRegexCharacterParam, TContext context)
    {
      VisitClrRegexQuantifierOwner(clrRegexCharacterParam, context);
    }
    public virtual void VisitClrRegexEndAnchor([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexEndAnchor clrRegexEndAnchorParam, TContext context)
    {
      VisitClrRegexAnchor(clrRegexEndAnchorParam, context);
    }
    public virtual void VisitClrRegexEscapeCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexEscapeCharacter clrRegexEscapeCharacterParam, TContext context)
    {
      VisitNode(clrRegexEscapeCharacterParam, context);
    }
    public virtual void VisitClrRegexGroup([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexGroup clrRegexGroupParam, TContext context)
    {
      VisitClrRegexQuantifierOwner(clrRegexGroupParam, context);
    }
    public virtual void VisitClrRegexGroupName([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexGroupName clrRegexGroupNameParam, TContext context)
    {
      VisitNode(clrRegexGroupNameParam, context);
    }
    public virtual void VisitClrRegexGroupPrefix([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexGroupPrefix clrRegexGroupPrefixParam, TContext context)
    {
      VisitNode(clrRegexGroupPrefixParam, context);
    }
    public virtual void VisitClrRegexInvalidCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexInvalidCharacter clrRegexInvalidCharacterParam, TContext context)
    {
      VisitNode(clrRegexInvalidCharacterParam, context);
    }
    public virtual void VisitClrRegexName([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexName clrRegexNameParam, TContext context)
    {
      VisitNode(clrRegexNameParam, context);
    }
    public virtual void VisitClrRegexNamedBackreference([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexNamedBackreference clrRegexNamedBackreferenceParam, TContext context)
    {
      VisitNode(clrRegexNamedBackreferenceParam, context);
    }
    public virtual void VisitClrRegexNamedBlock([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexNamedBlock clrRegexNamedBlockParam, TContext context)
    {
      VisitNode(clrRegexNamedBlockParam, context);
    }
    public virtual void VisitClrRegexNamedGroup([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexNamedGroup clrRegexNamedGroupParam, TContext context)
    {
      VisitClrRegexGroup(clrRegexNamedGroupParam, context);
    }
    public virtual void VisitClrRegexNestedSet([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexNestedSet clrRegexNestedSetParam, TContext context)
    {
      VisitClrRegexSetBodyItem(clrRegexNestedSetParam, context);
    }
    public virtual void VisitClrRegexNumber([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexNumber clrRegexNumberParam, TContext context)
    {
      VisitNode(clrRegexNumberParam, context);
    }
    public virtual void VisitClrRegexNumericQuantifier([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexNumericQuantifier clrRegexNumericQuantifierParam, TContext context)
    {
      VisitNode(clrRegexNumericQuantifierParam, context);
    }
    public virtual void VisitClrRegexOptionGroup([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexOptionGroup clrRegexOptionGroupParam, TContext context)
    {
      VisitClrRegexGroup(clrRegexOptionGroupParam, context);
    }
    public virtual void VisitClrRegexPrefixGroup([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexPrefixGroup clrRegexPrefixGroupParam, TContext context)
    {
      VisitClrRegexGroup(clrRegexPrefixGroupParam, context);
    }
    public virtual void VisitClrRegexQuantifier([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexQuantifier clrRegexQuantifierParam, TContext context)
    {
      VisitNode(clrRegexQuantifierParam, context);
    }
    public virtual void VisitClrRegexQuantifierOwner([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexQuantifierOwner clrRegexQuantifierOwnerParam, TContext context)
    {
      VisitNode(clrRegexQuantifierOwnerParam, context);
    }
    public virtual void VisitClrRegexRegularCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexRegularCharacter clrRegexRegularCharacterParam, TContext context)
    {
      VisitNode(clrRegexRegularCharacterParam, context);
    }
    public virtual void VisitClrRegexSet([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSet clrRegexSetParam, TContext context)
    {
      VisitClrRegexQuantifierOwner(clrRegexSetParam, context);
    }
    public virtual void VisitClrRegexSetBody([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetBody clrRegexSetBodyParam, TContext context)
    {
      VisitNode(clrRegexSetBodyParam, context);
    }
    [System.Obsolete("There are Nodes in PSI [clrRegexEscapeCharacter, clrRegexInvalidCharacter, clrRegexRegularCharacter, clrRegexSymbolCharacter] that directly implements clrRegexSetBodyCharacter and other interfaces, so this visitor member will not be invoked for these nodes")]
    public virtual void VisitClrRegexSetBodyCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetBodyCharacter clrRegexSetBodyCharacterParam, TContext context)
    {
      VisitClrRegexSetBodyItem(clrRegexSetBodyCharacterParam, context);
    }
    public virtual void VisitClrRegexSetBodyItem([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetBodyItem clrRegexSetBodyItemParam, TContext context)
    {
      VisitNode(clrRegexSetBodyItemParam, context);
    }
    public virtual void VisitClrRegexSetCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetCharacter clrRegexSetCharacterParam, TContext context)
    {
      VisitClrRegexSetBodyCharacter(clrRegexSetCharacterParam, context);
    }
    public virtual void VisitClrRegexSetRange([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRange clrRegexSetRangeParam, TContext context)
    {
      VisitClrRegexSetBodyItem(clrRegexSetRangeParam, context);
    }
    public virtual void VisitClrRegexSetRangeItem([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSetRangeItem clrRegexSetRangeItemParam, TContext context)
    {
      VisitNode(clrRegexSetRangeItemParam, context);
    }
    public virtual void VisitClrRegexSimpleGroup([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSimpleGroup clrRegexSimpleGroupParam, TContext context)
    {
      VisitClrRegexGroup(clrRegexSimpleGroupParam, context);
    }
    public virtual void VisitClrRegexStartAnchor([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexStartAnchor clrRegexStartAnchorParam, TContext context)
    {
      VisitClrRegexAnchor(clrRegexStartAnchorParam, context);
    }
    public virtual void VisitClrRegexSymbolCharacter([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegexSymbolCharacter clrRegexSymbolCharacterParam, TContext context)
    {
      VisitNode(clrRegexSymbolCharacterParam, context);
    }
    public virtual void VisitClrRegularExpression([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegularExpression clrRegularExpressionParam, TContext context)
    {
      VisitNode(clrRegularExpressionParam, context);
    }
    public virtual void VisitClrRegularExpressionFile([JetBrains.Annotations.NotNull] JetBrains.ReSharper.Psi.RegExp.ClrRegex.Tree.IClrRegularExpressionFile clrRegularExpressionFileParam, TContext context)
    {
      VisitNode(clrRegularExpressionFileParam, context);
    }
  }
}
